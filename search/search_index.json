{
    "docs": [
        {
            "location": "/",
            "text": "Bem vindo \u00e0 documenta\u00e7\u00e3o do projeto MyGrid\n\n\nO projeto MyGrid tem o objetivo de oferecer uma ferramenta computacional para \nrepresenta\u00e7\u00e3o topol\u00f3gica e descritiva dos componentes da rede el\u00e9trica de distribui\u00e7\u00e3o\n, permitindo em contrapartida a realiza\u00e7\u00e3o de estudos da rede definida, tais como:\n\n\n\n\nan\u00e1lise de fluxo de carga;\n\n\najuste de reguladores de tens\u00e3o;\n\n\nc\u00e1lculo de curto-circuito;\n\n\nestudos de impactos causados pela inser\u00e7\u00e3o de micro-gera\u00e7\u00e3o distribu\u00edda.\n\n\n\n\nA representa\u00e7\u00e3o que o MyGrid faz de todos os componentes da rede el\u00e9trica \u00e9 trif\u00e1sica o que permite uma representa\u00e7\u00e3o mais fiel \u00e0 realidade, permitindo o estudo de desequil\u00edbrios no sistema e a conex\u00e3o de cargas e gera\u00e7\u00f5es monof\u00e1sica e bif\u00e1sicas.\n\n\nO MyGrid \u00e9 desenvolvido em linguagem de programa\u00e7\u00e3o python e mantido pelo Grupo de Redes El\u00e9tricas Inteligentes da Universidade Federal do Cear\u00e1 - \nGREI-UFC\n.\n\n\nCome\u00e7ando do come\u00e7o\n\n\nPara come\u00e7ar a utilizar o MyGrid existem duas op\u00e7\u00f5es. A primeira \u00e9 utilizar o reposit\u00f3rio padr\u00e3o de pacotes python (PYPI), simplesmente digitando o comando:\n\n\n$ pip install mygrid\n\n\n\nInicie uma se\u00e7\u00e3o Jupyter e digite:\n\n\nIn [1]: import mygrid\n\n\n\nPronto, o mygrid j\u00e1 est\u00e1 pronto para ser utilizado.\n\n\nA segunda op\u00e7\u00e3o \u00e9 fazer o download do c\u00f3digo fonte no seu computador, para fazer isso \u00e9 muito simples, basta abrir o terminal e digitar o seguinte comando:\n\n\n$ git clone https://github.com/grei-ufc/MyGrid\n\n\n\nAp\u00f3s executar esse comando uma pasta com o nome MyGrid ser\u00e1 criada no diret\u00f3rio em que voc\u00ea se encontra.\n\n\nDigite:\n\n\n$ cd MyGrid\n\n\n\nInicie uma se\u00e7\u00e3o Jupyter:\n\n\n$ jupyter qtconsole\n\n\n\nNo console Jupyter digite:\n\n\nIn [1]: import mygrid\n\n\n\nPara instalar o c\u00f3digo no seu ambiente Python padr\u00e3o ou no virtual enviroment que estiver utilizando, basta digitar no diret\u00f3rio raiz do mygrid:\n\n\n$ python setup.py install\n\n\n\nSe tudo tiver corrido bem nenhum erro ocorrer\u00e1 e voc\u00ea estar\u00e1 pronto para utilizar o MyGrid.\n\n\nPrinc\u00edpios Gerais\n\n\nO MyGrid \u00e9 a implementa\u00e7\u00e3o computacional do conceito de RNP, ou Representa\u00e7\u00e3o N\u00f3 Profundidade, para a representa\u00e7\u00e3o da rede el\u00e9trica de distribui\u00e7\u00e3o. Ou seja, no MyGrid os conceitos de n\u00f3, profundidade, \u00e1rvore de grafo, entre outros est\u00e3o mesclados aos conceitos de rede el\u00e9trica, chave, trecho de condutor, setor el\u00e9trico, e assim por diante. Isso foi realizado por meio de duas camadas de implementa\u00e7\u00e3o computacional.\n\n\nNa primeira camada o MyGrid implementa dos conceitos relacionados \u00e0 RNP por meio da classe \u00c1rvore. Em uma segunda camada as classes implementadas representam os elementos da rede el\u00e9trica, como mencionados anteriormente, tendo alguns destes elementos as classes que representam a RNP como super-classes.\n\n\nOs conceitos aqui mencionados ser\u00e3o mais bem compreendidos por meio da montagem e utiliza\u00e7\u00e3o dos m\u00e9todos computacionais disponibilizados pelas classes afim de realizar opera\u00e7\u00f5es na rede el\u00e9trica.\n\n\nAl\u00e9m de disponibilizar uma representa\u00e7\u00e3o computacionalmente eficiente da rede el\u00e9trica o MyGrid disponibiliza algoritmos de an\u00e1lise tais como c\u00e1lculo de fluxo de carga e de curto-circuito.\n\n\nRepresenta\u00e7\u00e3o de Grafos\n\n\nPara que seja poss\u00edvel a representa\u00e7\u00e3o da rede el\u00e9trica por meio de grafos no modelo n\u00f3 profundidade primeiro \u00e9 necess\u00e1rio ter ferramentas que permitam a representa\u00e7\u00e3o gen\u00e9rica de grafos. Quem implementa essas fun\u00e7\u00f5es no MyGrid \u00e9 o m\u00f3dulo principal chamado de \nrnp.py\n.\n\n\nA principal classe desse m\u00f3dulo se chama \nTree()\n e possui todos os m\u00e9todos e atributos necess\u00e1rios para a manipula\u00e7\u00e3o de uma \u00e1rvore de grafo.\n\n\nNo exemplo abaixo \u00e9 mostrado o instanciamento de duas \u00e1rvores de grafo, \ntree_1\n e \ntree_2\n. Para que a estrutura rnp possa ser montada duas a\u00e7\u00f5es precisam ser realizadas, a primeira \u00e9 a passagem da estrutura da rede, isso \u00e9 feito por meio de um dicion\u00e1rio em que cada chave \u00e9 o nome de um dos n\u00f3s da \u00e1rvore e os valores s\u00e3o listas contendo os vizinhos desse n\u00f3, sem considerar orienta\u00e7\u00e3o, ainda. A segunda a\u00e7\u00e3o \u00e9 indicar qual a o n\u00f3 ser\u00e1 considerado o n\u00f3 de refer\u00eancia da \u00e1rvore, ou seja, qual o n\u00f3 ser\u00e1 o n\u00f3 raiz, isso implica que este n\u00f3 ter\u00e1 profundidade zero.\n\n\nnodes1 = {3: [1],\n          1: [3, 2, 7],\n          7: [1, 8, 9, 4, 10],\n          10: [7],\n          4: [7, 5, 6],\n          5: [4],\n          6: [4],\n          9: [7],\n          8: [7],\n          2: [1, 11, 12, 13],\n          11: [2],\n          12: [2, 13],\n          13: [12]}\n\nnodes2 = {14: [15],\n          15: [14, 16, 19],\n          16: [15, 17, 18],\n          17: [16],\n          18: [16],\n          19: [15]}\n\n# defini\u00e7\u00e3o da tree a1\ntree_1 = Tree(nodes1)\n\n# ordena\u00e7\u00e3o da tree a1\ntree_1.order(root=3)\nprint(tree_1.rnp)\n\n# defini\u00e7\u00e3o da tree a2\ntree_2 = Tree(nodes2)\n\n# ordena\u00e7\u00e3o da tree a2\ntree_2.order(root=14)\nprint(tree_2.rnp)\n\n\n\n\nAp\u00f3s a defini\u00e7\u00e3o das \u00e1rvores de grafo e instanciados os objetos \u00e9 poss\u00edvel relizar as opera\u00e7\u00f5es de poda e de inser\u00e7\u00e3o sobre as \u00e1rvores de grafos, e dessa forma modificar suas estruturas. No c\u00f3digo abaixo \u00e9 feita uma opera\u00e7\u00e3o de poda em \ntree_1\n na altura do n\u00f3 7 e em seguida o ramo podado \u00e9 inserido em \ntree_2\n na altura do n\u00f3 19.\n\n\n# opera\u00e7\u00e3o de poda\nprune = tree_1.prune(7, change_rnp=True)\nprint(prune)\nprint(tree_1.rnp)\n\n# opera\u00e7\u00e3o de inser\u00e7\u00e3o\ntree_2.insert_branch(19, prune, 7)\nprint(tree_2.rnp)\n\n\n\n\nOs resultados s\u00e3o mostrados abaixo:\n\n\nInstanciando uma rede el\u00e9trica\n\n\nO principal objetivo do MyGrid \u00e9 a representa\u00e7\u00e3o da rede el\u00e9trica em uma estrtura de grafos mas ao mesmo tempo com recursos de orienta\u00e7\u00e3o a objetos. Isso \u00e9 feito definindo classes que representam os elementos da rede el\u00e9trica mas que tamb\u00e9m herdam das classes definidas no m\u00f3dulo \nrnp.py\n para que seja poss\u00edvel uma representa\u00e7\u00e3o topol\u00f3gica da rede.\n\n\nPara exemplificar o processo de representa\u00e7\u00e3o da rede el\u00e9trica iremos considerar a rede mostrada na Figura abaixo.\n\n\n\n\nNesta rede \u00e9 poss\u00edvel observar alguns componentes b\u00e1sicos de uma rede el\u00e9trica de m\u00e9dia/baixa tens\u00e3o:\n\n\n\n\nTransformadores;\n\n\nChaves El\u00e9tricas;\n\n\nTrechos de Linahs;\n\n\nPontos de deriva\u00e7\u00e3o e de carga;\n\n\n\n\nOs primeiros elementos que podem ser instanciados para a composi\u00e7\u00e3o da rede el\u00e9trica s\u00e3o as chaves existentes no sistema, para a rede exemplo temos:\n\n\n\nfrom mygrid.grid import Switch\n\n# switchs do alimentador 1 de S1\nch1 = Switch(name='1', state=1)\nch2 = Switch(name='2', state=1)\nch3 = Switch(name='3', state=1)\n\n# Switchs do alimentador 2 de S1\nch9 = Switch(name='9', state=1)\nch10 = Switch(name='10', state=1)\n\n# switchs de Fronteira\nch4 = Switch(name='4', state=0)\nch5 = Switch(name='5', state=0)\nch8 = Switch(name='8', state=0)\nch11 = Switch(name='11', state=0)\n\n# switchs do alimentador de S2\nch6 = Switch(name='6', state=1)\nch7 = Switch(name='7', state=1)\n\n\n\n\nEm seguinda podemos instanciar os transformadores de distribui\u00e7\u00e3o, ou seja, os transformadores que baixam o n\u00edvel de tens\u00e3o de linha de 13,8kV para 380V. Para isso \u00e9 necess\u00e1rio tamb\u00e9m instanciar os n\u00edveis de tens\u00e3o prim\u00e1rio e secund\u00e1rio:\n\n\n\nfrom mygrid.grid import TransformerModel\n# tensao nominal\n\nvll_mt = p2r(13.8e3, 0.0)\nvll_bt = p2r(380.0, 0.0)\n\n# transformers\nt1 = TransformerModel(name=\"T1\",\n                      primary_voltage=vll_mt,\n                      secondary_voltage=vll_bt,\n                      power=225e3,\n                      impedance=0.01 + 0.2j)\n\n\n\n\nAp\u00f3s instanciar chaves e transformadores de distribui\u00e7\u00e3o o pr\u00f3ximo passo \u00e9 instanciar os n\u00f3s de carga presentes no sistema, tanto os de m\u00e9dia quanto os de baixa tens\u00e3o, isso \u00e9 feito especificando um \nnome\n, um \nn\u00edvel de tens\u00e3o\n, e um \nvalor de carga\n.\n\n\nTamb\u00e9m se o n\u00f3 de carga possuir interface com uma rede el\u00e9trica externa isso deve ser informador no par\u00e2metro \nexternal_grid\n.\n\n\n# Nos de carga do alimentador S1_AL1\ns1 = LoadNode(name='S1',\n              voltage=vll_mt,\n              external_grid=eg1)\na1 = LoadNode(name='A1',\n              power=120 + 160j,\n              voltage=vll_mt)\na2 = LoadNode(name='A2',\n              power=150.0e3 + 110.0e3j,\n              voltage=vll_mt)\n\na3 = LoadNode(name='A3',\n              power=100.0e3 + 80.0e3j,\n              voltage=vll_mt)\nb1 = LoadNode(name='B1',\n              power=200.0e3 + 140.0e3j,\n              # generation=b1_PQ,\n              voltage=vll_mt)\nb2 = LoadNode(name='B2',\n              power=150.0e3 + 110.0e3j,\n              # generation=b2_PV,\n              voltage=vll_mt)\n\nb3 = LoadNode(name='B3',\n              power=100.0e3 + 80.0e3j,\n              voltage=vll_mt)\nc1 = LoadNode(name='C1',\n              power=200.0e3 + 140.0e3j,\n              # shunt_capacitor=SC_C1,\n              voltage=vll_mt)\nc2 = LoadNode(name='C2',\n              power=150.0e3 + 110.0e3j,\n              # generation=c2_PV,\n              voltage=vll_mt)\nc3 = LoadNode(name='C3',\n              ppa=400.0e3 + 0.0j,\n              ppb=0.0e3 + 0.0j,\n              ppc=0.0e3 + 0.0j,\n              # generation=c3_PV,\n              voltage=vll_mt)\n\n# Nos de carga do alimentador S1_AL1\nf1 = LoadNode(name='F1',\n              power=100.0e3 + 80.0e3j,\n              voltage=vll_mt)\ng1 = LoadNode(name='G1',\n              power=100.0e3 + 80.0e3j,\n              voltage=vll_mt)\n\n# Nos de carga do alimentador S2_AL1\ns2 = LoadNode(name='S2',\n              voltage=vll_mt,\n              external_grid=eg1)\nd1 = LoadNode(name='D1',\n              power=200.0e3 + 160.0e3j,\n              voltage=vll_mt)\nd2 = LoadNode(name='D2',\n              power=900.0e3 + 40.0e3j,\n              voltage=vll_mt)\nd3 = LoadNode(name='D3',\n              power=100.0e3 + 80.0e3j,\n              voltage=vll_mt,)\ne1 = LoadNode(name='E1',\n              power=100.0e3 + 40.0e3j,\n              voltage=vll_mt)\ne2 = LoadNode(name='E2',\n              power=110.0e3 + 70.0e3j,\n              voltage=vll_mt)\ne3 = LoadNode(name='E3',\n              power=150.0e3 + 80.0e3j,\n              voltage=vll_mt)\n\n# Subgrid load-nodes connecteds to A1\naa1 = LoadNode(name='AA1',\n               power=0.0 + 0.0j,\n               voltage=vll_bt)\naa2 = LoadNode(name='AA2',\n               power=20.0e3 + 5.0e3j,\n               voltage=vll_bt)\naa3 = LoadNode(name='AA3',\n               power=20.0e3 + 5.0e3j,\n               voltage=vll_bt)\n\n\n\n\nAp\u00f3s serem definidos os n\u00f3s de carga da rede el\u00e9trica, \u00e9 preciso especificar os seguimentos de linha ou transformadores que est\u00e3o entre dois n\u00f3s, definindo assim a topologia da rede. O primeiro procedimento para isso \u00e9 a defini\u00e7\u00e3o dos condutores que ser\u00e3o utilizados nos seguimentos de linha. Para isso o MyGrid possui uma tabela de condutores pr\u00e9-definidos conforme especificado nos ap\u00eandices do livro \nDistribution System Modeling and Analysis de William H. Kersting\n. A lista dos condutores com seus respectivos c\u00f3digos pode ser visualizada abaixo:\n\n\n[\n    {\n        \"id\": 0,\n        \"size\": \"1\",\n        \"stranding\": \"None\",\n        \"material\": \"ACSR\",\n    },\n    {\n        \"id\": 1,\n        \"size\": \"1\",\n        \"stranding\": \"7 STRD\",\n        \"material\": \"Copper\",\n    },\n    {\n        \"id\": 2,\n        \"size\": \"1\",\n        \"stranding\": \"CLASS A\",\n        \"material\": \"AA\",\n    },\n    {\n        \"id\": 3,\n        \"size\": \"2\",\n        \"stranding\": \"6/1\",\n        \"material\": \"ACSR\",\n    },\n    {\n        \"id\": 4,\n        \"size\": \"2\",\n        \"stranding\": \"7 STRD\",\n        \"material\": \"Copper\",\n    },\n    {\n        \"id\": 5,\n        \"size\": \"2\",\n        \"stranding\": \"7/1\",\n        \"material\": \"ACSR\",\n    },\n    {\n        \"id\": 6,\n        \"size\": \"2\",\n        \"stranding\": \"AWG SLD\",\n        \"material\": \"Copper\",\n    },\n    {\n        \"id\": 7,\n        \"size\": \"2\",\n        \"stranding\": \"CLASS A\",\n        \"material\": \"AA\",\n    },\n    {\n        \"id\": 8,\n        \"size\": \"3\",\n        \"stranding\": \"6/1\",\n        \"material\": \"ACSR\",\n    },\n    {\n        \"id\": 9,\n        \"size\": \"3\",\n        \"stranding\": \"AWG SLD\",\n        \"material\": \"Copper\",\n    },\n    {\n        \"id\": 10,\n        \"size\": \"4\",\n        \"stranding\": \"6/1\",\n        \"material\": \"ACSR\",\n    },\n    {\n        \"id\": 11,\n        \"size\": \"4\",\n        \"stranding\": \"7/1\",\n        \"material\": \"ACSR\",\n    },\n    {\n        \"id\": 12,\n        \"size\": \"4\",\n        \"stranding\": \"AWG SLD\",\n        \"material\": \"Copper\",\n    },\n    {\n        \"id\": 13,\n        \"size\": \"4\",\n        \"stranding\": \"CLASS A\",\n        \"material\": \"AA\",\n    },\n    {\n        \"id\": 14,\n        \"size\": \"5\",\n        \"stranding\": \"6/1\",\n        \"material\": \"ACSR\",\n    },\n    {\n        \"id\": 15,\n        \"size\": \"5\",\n        \"stranding\": \"AWG SLD\",\n        \"material\": \"Copper\",\n    },\n    {\n        \"id\": 16,\n        \"size\": \"6\",\n        \"stranding\": \"6/1\",\n        \"material\": \"ACSR\",\n    },\n    {\n        \"id\": 17,\n        \"size\": \"6\",\n        \"stranding\": \"AWG SLD\",\n        \"material\": \"Copper\",\n    },\n    {\n        \"id\": 18,\n        \"size\": \"6\",\n        \"stranding\": \"CLASS A\",\n        \"material\": \"AA\",\n    },\n    {\n        \"id\": 19,\n        \"size\": \"7\",\n        \"stranding\": \"AWG SLD\",\n        \"material\": \"Copper\",\n    },\n    {\n        \"id\": 20,\n        \"size\": \"8\",\n        \"stranding\": \"AWG SLD\",\n        \"material\": \"Copper\",\n    },\n    {\n        \"id\": 21,\n        \"size\": \"9\",\n        \"stranding\": \"AWG SLD\",\n        \"material\": \"Copper\",\n    },\n    {\n        \"id\": 22,\n        \"size\": \"10\",\n        \"stranding\": \"AWG SLD\",\n        \"material\": \"Copper\",\n    },\n    {\n        \"id\": 23,\n        \"size\": \"12\",\n        \"stranding\": \"AWG SLD\",\n        \"material\": \"Copper\",\n    },\n    {\n        \"id\": 24,\n        \"size\": \"14\",\n        \"stranding\": \"AWG SLD\",\n        \"material\": \"Copper\",\n    },\n    {\n        \"id\": 25,\n        \"size\": \"16\",\n        \"stranding\": \"AWG SLD\",\n        \"material\": \"Copper\",\n    },\n    {\n        \"id\": 26,\n        \"size\": \"18\",\n        \"stranding\": \"AWG SLD\",\n        \"material\": \"Copper\",\n    },\n    {\n        \"id\": 27,\n        \"size\": \"19\",\n        \"stranding\": \"AWG SLD\",\n        \"material\": \"Copper\",\n    },\n    {\n        \"id\": 28,\n        \"size\": \"20\",\n        \"stranding\": \"AWG SLD\",\n        \"material\": \"Copper\",\n    },\n    {\n        \"id\": 29,\n        \"size\": \"22\",\n        \"stranding\": \"AWG SLD\",\n        \"material\": \"Copper\",\n    },\n    {\n        \"id\": 30,\n        \"size\": \"24\",\n        \"stranding\": \"AWG SLD\",\n        \"material\": \"Copper\",\n    },\n    {\n        \"id\": 31,\n        \"size\": \"1/0\",\n        \"stranding\": \"None\",\n        \"material\": \"ACSR\",\n    },\n    {\n        \"id\": 32,\n        \"size\": \"1/0\",\n        \"stranding\": \"7 STRD\",\n        \"material\": \"Copper\",\n    },\n    {\n        \"id\": 33,\n        \"size\": \"1/0\",\n        \"stranding\": \"CLASS A\",\n        \"material\": \"AA\",\n    },\n    {\n        \"id\": 34,\n        \"size\": \"2/0\",\n        \"stranding\": \"None\",\n        \"material\": \"ACSR\",\n    },\n    {\n        \"id\": 35,\n        \"size\": \"2/0\",\n        \"stranding\": \"7 STRD\",\n        \"material\": \"Copper\",\n    },\n    {\n        \"id\": 36,\n        \"size\": \"2/0\",\n        \"stranding\": \"CLASS A\",\n        \"material\": \"AA\",\n    },\n    {\n        \"id\": 37,\n        \"size\": \"3/0\",\n        \"stranding\": \"12 STRD\",\n        \"material\": \"Copper\",\n    },\n    {\n        \"id\": 38,\n        \"size\": \"3/0\",\n        \"stranding\": \"6/1\",\n        \"material\": \"ACSR\",\n    },\n    {\n        \"id\": 39,\n        \"size\": \"3/0\",\n        \"stranding\": \"7 STRD\",\n        \"material\": \"Copper\",\n    },\n    {\n        \"id\": 40,\n        \"size\": \"3/0\",\n        \"stranding\": \"CLASS A\",\n        \"material\": \"AA\",\n    },\n    {\n        \"id\": 41,\n        \"size\": \"3/8\",\n        \"stranding\": \"INCH STE\",\n        \"material\": \"Steel\",\n    },\n    {\n        \"id\": 42,\n        \"size\": \"4/0\",\n        \"stranding\": \"12 STRD\",\n        \"material\": \"Copper\",\n    },\n    {\n        \"id\": 43,\n        \"size\": \"4/0\",\n        \"stranding\": \"19 STRD\",\n        \"material\": \"Copper\",\n    },\n    {\n        \"id\": 44,\n        \"size\": \"4/0\",\n        \"stranding\": \"6/1\",\n        \"material\": \"ACSR\",\n    },\n    {\n        \"id\": 45,\n        \"size\": \"4/0\",\n        \"stranding\": \"7 STRD\",\n        \"material\": \"Copper\",\n    },\n    {\n        \"id\": 46,\n        \"size\": \"4/0\",\n        \"stranding\": \"CLASS A\",\n        \"material\": \"AA\",\n    },\n    {\n        \"id\": 47,\n        \"size\": \"250000\",\n        \"stranding\": \"12 STRD\",\n        \"material\": \"Copper\",\n    },\n    {\n        \"id\": 48,\n        \"size\": \"250000\",\n        \"stranding\": \"19 STRD\",\n        \"material\": \"Copper\",\n    },\n    {\n        \"id\": 49,\n        \"size\": \"250000\",\n        \"stranding\": \"CON LAY\",\n        \"material\": \"AA\",\n    },\n    {\n        \"id\": 50,\n        \"size\": \"266800\",\n        \"stranding\": \"26/7\",\n        \"material\": \"ACSR\",\n    },\n    {\n        \"id\": 51,\n        \"size\": \"266800\",\n        \"stranding\": \"CLASS A\",\n        \"material\": \"AA\",\n    },\n    {\n        \"id\": 52,\n        \"size\": \"300000\",\n        \"stranding\": \"12 STRD\",\n        \"material\": \"Copper\",\n    },\n    {\n        \"id\": 53,\n        \"size\": \"300000\",\n        \"stranding\": \"19 STRD\",\n        \"material\": \"Copper\",\n    },\n    {\n        \"id\": 54,\n        \"size\": \"300000\",\n        \"stranding\": \"26/7\",\n        \"material\": \"ACSR\",\n    },\n    {\n        \"id\": 55,\n        \"size\": \"300000\",\n        \"stranding\": \"30/7\",\n        \"material\": \"ACSR\",\n    },\n    {\n        \"id\": 56,\n        \"size\": \"300000\",\n        \"stranding\": \"CON LAY\",\n        \"material\": \"AA\",\n    },\n    {\n        \"id\": 57,\n        \"size\": \"336400\",\n        \"stranding\": \"26/7\",\n        \"material\": \"ACSR\",\n    },\n    {\n        \"id\": 58,\n        \"size\": \"336400\",\n        \"stranding\": \"30/7\",\n        \"material\": \"ACSR\",\n    },\n    {\n        \"id\": 59,\n        \"size\": \"336400\",\n        \"stranding\": \"CLASS A\",\n        \"material\": \"AA\",\n    },\n    {\n        \"id\": 60,\n        \"size\": \"350000\",\n        \"stranding\": \"12 STRD\",\n        \"material\": \"Copper\",\n    },\n    {\n        \"id\": 61,\n        \"size\": \"350000\",\n        \"stranding\": \"19 STRD\",\n        \"material\": \"Copper\",\n    },\n    {\n        \"id\": 62,\n        \"size\": \"350000\",\n        \"stranding\": \"CON LAY\",\n        \"material\": \"AA\",\n    },\n    {\n        \"id\": 63,\n        \"size\": \"397500\",\n        \"stranding\": \"26/7\",\n        \"material\": \"ACSR\",\n    },\n    {\n        \"id\": 64,\n        \"size\": \"397500\",\n        \"stranding\": \"30/7\",\n        \"material\": \"ACSR\",\n    },\n    {\n        \"id\": 65,\n        \"size\": \"397500\",\n        \"stranding\": \"CLASS A\",\n        \"material\": \"AA\",\n    },\n    {\n        \"id\": 66,\n        \"size\": \"400000\",\n        \"stranding\": \"19 STRD\",\n        \"material\": \"Copper\",\n    },\n    {\n        \"id\": 67,\n        \"size\": \"450000\",\n        \"stranding\": \"19 STRD\",\n        \"material\": \"Copper\",\n    },\n    {\n        \"id\": 68,\n        \"size\": \"450000\",\n        \"stranding\": \"CON LAG\",\n        \"material\": \"AA\",\n    },\n    {\n        \"id\": 69,\n        \"size\": \"477000\",\n        \"stranding\": \"26/7\",\n        \"material\": \"ACSR\",\n    },\n    {\n        \"id\": 70,\n        \"size\": \"477000\",\n        \"stranding\": \"30/7\",\n        \"material\": \"ACSR\",\n    },\n    {\n        \"id\": 71,\n        \"size\": \"477000\",\n        \"stranding\": \"CLASS A\",\n        \"material\": \"AA\",\n    },\n    {\n        \"id\": 72,\n        \"size\": \"500000\",\n        \"stranding\": \"19 STRD\",\n        \"material\": \"Copper\",\n    },\n    {\n        \"id\": 73,\n        \"size\": \"500000\",\n        \"stranding\": \"37 STRD\",\n        \"material\": \"Copper\",\n    },\n    {\n        \"id\": 74,\n        \"size\": \"500000\",\n        \"stranding\": \"CON LAY\",\n        \"material\": \"AA\",\n    },\n    {\n        \"id\": 75,\n        \"size\": \"556500\",\n        \"stranding\": \"26/7\",\n        \"material\": \"ACSR\",\n    },\n    {\n        \"id\": 76,\n        \"size\": \"556500\",\n        \"stranding\": \"30/7\",\n        \"material\": \"ACSR\",\n    },\n    {\n        \"id\": 77,\n        \"size\": \"556500\",\n        \"stranding\": \"CLASS A\",\n        \"material\": \"AA\",\n    },\n    {\n        \"id\": 78,\n        \"size\": \"600000\",\n        \"stranding\": \"37 STRD\",\n        \"material\": \"Copper\",\n    },\n    {\n        \"id\": 79,\n        \"size\": \"600000\",\n        \"stranding\": \"CON LAY\",\n        \"material\": \"AA\",\n    },\n    {\n        \"id\": 80,\n        \"size\": \"605000\",\n        \"stranding\": \"26/7\",\n        \"material\": \"ACSR\",\n    },\n    {\n        \"id\": 81,\n        \"size\": \"605000\",\n        \"stranding\": \"54/7\",\n        \"material\": \"ACSR\",\n    },\n    {\n        \"id\": 82,\n        \"size\": \"636000\",\n        \"stranding\": \"27/7\",\n        \"material\": \"ACSR\",\n    },\n    {\n        \"id\": 83,\n        \"size\": \"636000\",\n        \"stranding\": \"30/19\",\n        \"material\": \"ACSR\",\n    },\n    {\n        \"id\": 84,\n        \"size\": \"636000\",\n        \"stranding\": \"54/7\",\n        \"material\": \"ACSR\",\n    },\n    {\n        \"id\": 85,\n        \"size\": \"636000\",\n        \"stranding\": \"CLASS A\",\n        \"material\": \"AA\",\n    },\n    {\n        \"id\": 86,\n        \"size\": \"666600\",\n        \"stranding\": \"54/7\",\n        \"material\": \"ACSR\",\n    },\n    {\n        \"id\": 87,\n        \"size\": \"700000\",\n        \"stranding\": \"37 STRD\",\n        \"material\": \"Copper\",\n    },\n    {\n        \"id\": 88,\n        \"size\": \"700000\",\n        \"stranding\": \"CON LAY\",\n        \"material\": \"AA\",\n    },\n    {\n        \"id\": 89,\n        \"size\": \"715500\",\n        \"stranding\": \"26/7\",\n        \"material\": \"ACSR\",\n    },\n    {\n        \"id\": 90,\n        \"size\": \"715500\",\n        \"stranding\": \"30/19\",\n        \"material\": \"ACSR\",\n    },\n    {\n        \"id\": 91,\n        \"size\": \"715500\",\n        \"stranding\": \"54/7\",\n        \"material\": \"ACSR\",\n    },\n    {\n        \"id\": 92,\n        \"size\": \"715500\",\n        \"stranding\": \"CLASS A\",\n        \"material\": \"AA\",\n    },\n    {\n        \"id\": 93,\n        \"size\": \"750000\",\n        \"stranding\": \"37 STRD\",\n        \"material\": \"AA\",\n    },\n    {\n        \"id\": 94,\n        \"size\": \"750000\",\n        \"stranding\": \"CON LAY\",\n        \"material\": \"AA\",\n    },\n    {\n        \"id\": 95,\n        \"size\": \"795000\",\n        \"stranding\": \"26/7\",\n        \"material\": \"ACSR\",\n    },\n    {\n        \"id\": 96,\n        \"size\": \"795000\",\n        \"stranding\": \"30/19\",\n        \"material\": \"ACSR\",\n    },\n    {\n        \"id\": 97,\n        \"size\": \"795000\",\n        \"stranding\": \"54/7\",\n        \"material\": \"ACSR\",\n    }\n]\n\n\n\n\nTamb\u00e9m \u00e9 necess\u00e1rio definir um modelo de linha especificando os condutores da linha e sua configura\u00e7\u00e3o geom\u00e9trica na estrutura utilizada. Para este exemplo s\u00e3o utilizados dois tipos de modelos de linha, um para a rede de m\u00e9dia tens\u00e3o e outro para a rede de baixa tens\u00e3o. Tamb\u00e9m s\u00e3o especificados os condutores ids dos condutires de fase e de neutro para a m\u00e9dia e a baixa tens\u00e3o:\n\n\nphase_conduct = Conductor(id=57)\nneutral_conduct = Conductor(id=44)\n\nline_model_a = LineModel(loc_a=0.0 + 29.0j,\n                         loc_b=2.5 + 29.0j,\n                         loc_c=7.0 + 29.0j,\n                         loc_n=4.0 + 25.0j,\n                         conductor=phase_conduct,\n                         neutral_conductor=neutral_conduct,\n                         neutral=False)\n\nphase_conduct_bt = Conductor(id=32)\n\nline_model_b = LineModel(loc_a=0.0 + 29.0j,\n                         loc_b=2.5 + 29.0j,\n                         loc_c=7.0 + 29.0j,\n                         loc_n=4.0 + 25.0j,\n                         conductor=phase_conduct_bt,\n                         neutral_conductor=neutral_conduct,\n                         neutral=True)\n\n\n\n\nEspecificados os modelos de linha \u00e9 poss\u00edvel pass\u00e1-los como par\u00e2metro da classe que ir\u00e1 especificar a liga\u00e7\u00e3o entre os n\u00f3s, no MyGrid essa classe tem o nome de \nSection()\n e recebe como par\u00e2metros um nome, os n\u00f3s que est\u00e3o em seus extremos, caso haja chave no seguimento esta \u00e9 informada, o modelo de linha ou de transformador, e caso seja linha, o comprimento do seguimento de linha:\n\n\n# Trechos do alimentador S1_AL1\ns1_a2 = Section(name='S1A2',\n                n1=s1,\n                n2=a2,\n                switch=ch1,\n                line_model=line_model_a,\n                length=4)\n\na2_a1 = Section(name='A2A1',\n                n1=a2,\n                n2=a1,\n                line_model=line_model_a,\n                length=4)\na2_a3 = Section(name='A2A3',\n                n1=a2,\n                n2=a3,\n                line_model=line_model_a,\n                length=4)\na2_c1 = Section(name='A2C1',\n                n1=a2,\n                n2=c1,\n                switch=ch3,\n                line_model=line_model_a,\n                length=4)\n\nc1_c2 = Section(name='C1C2',\n                n1=c1,\n                n2=c2,\n                line_model=line_model_a,\n                length=4)\nc1_c3 = Section(name='C1C3',\n                n1=c1,\n                n2=c3,\n                line_model=line_model_a,\n                length=4)\n\na3_b1 = Section(name='A3B1',\n                n1=a3,\n                n2=b1,\n                switch=ch2,\n                line_model=line_model_a,\n                length=4)\n\nb1_b2 = Section(name='B1B2',\n                n1=b1,\n                n2=b2,\n                line_model=line_model_a,\n                length=4)\nb2_b3 = Section(name='B2B3',\n                n1=b2,\n                n2=b3,\n                line_model=line_model_a,\n                length=4)\n\n# Trechos do alimentador S1_AL2\ns1_f1 = Section(name='S1F1',\n                n1=s1,\n                n2=f1,\n                switch=ch9,\n                line_model=line_model_a,\n                length=1.0)\nf1_g1 = Section(name='F1G1',\n                n1=f1,\n                n2=g1,\n                switch=ch10,\n                line_model=line_model_a,\n                length=1.0)\ng1_d2 = Section(name='G1D2',\n                n1=g1,\n                n2=d2,\n                switch=ch11,\n                line_model=line_model_a,\n                length=1.0)\n\n# Trechos do alimentador S2_AL1\ns2_d1 = Section(name='S2D1',\n                n1=s2,\n                n2=d1,\n                switch=ch6,\n                line_model=line_model_a,\n                length=1.0)\n\nd1_d2 = Section(name='D1D2',\n                n1=d1,\n                n2=d2,\n                line_model=line_model_a,\n                length=1.0)\nd1_d3 = Section(name='D1D3',\n                n1=d1,\n                n2=d3,\n                line_model=line_model_a,\n                length=1.0)\nd1_e1 = Section(name='D1E1',\n                n1=d1,\n                n2=e1,\n                switch=ch7,\n                line_model=line_model_a,\n                length=1.0)\ne1_e2 = Section(name='E1E2',\n                n1=e1,\n                n2=e2,\n                line_model=line_model_a,\n                length=1.0)\ne1_e3 = Section(name='E1E3',\n                n1=e1,\n                n2=e3,\n                line_model=line_model_a,\n                length=1.0)\n\n# Sections de encontro de alimentador\nc3_e3 = Section(name='C3E3',\n                n1=c3,\n                n2=e3,\n                switch=ch8,\n                line_model=line_model_a,\n                length=1.0)\nb2_e2 = Section(name='B2E2',\n                n1=b2,\n                n2=e2,\n                switch=ch4,\n                line_model=line_model_a,\n                length=1.0)\n\nb3_c3 = Section(name='B3C3',\n                n1=b3,\n                n2=c3,\n                switch=ch5,\n                line_model=line_model_a,\n                length=0.5)\n\n\n# subgrid sections connecteds to A1\na1_aa1 = Section(name='A1AA1',\n                 n1=a1,\n                 n2=aa1,\n                 transformer=t1,\n                 length=3.0e-2)\naa1_aa2 = Section(name='AA1AA2',\n                  n1=aa1,\n                  n2=aa2,\n                  line_model=line_model_b,\n                  length=3.0e-2)\naa1_aa3 = Section(name='AA2AA3',\n                  n1=aa1,\n                  n2=aa3,\n                  line_model=line_model_b,\n                  length=3.0e-2)",
            "title": "Inicio"
        },
        {
            "location": "/#bem-vindo-a-documentacao-do-projeto-mygrid",
            "text": "O projeto MyGrid tem o objetivo de oferecer uma ferramenta computacional para  representa\u00e7\u00e3o topol\u00f3gica e descritiva dos componentes da rede el\u00e9trica de distribui\u00e7\u00e3o , permitindo em contrapartida a realiza\u00e7\u00e3o de estudos da rede definida, tais como:   an\u00e1lise de fluxo de carga;  ajuste de reguladores de tens\u00e3o;  c\u00e1lculo de curto-circuito;  estudos de impactos causados pela inser\u00e7\u00e3o de micro-gera\u00e7\u00e3o distribu\u00edda.   A representa\u00e7\u00e3o que o MyGrid faz de todos os componentes da rede el\u00e9trica \u00e9 trif\u00e1sica o que permite uma representa\u00e7\u00e3o mais fiel \u00e0 realidade, permitindo o estudo de desequil\u00edbrios no sistema e a conex\u00e3o de cargas e gera\u00e7\u00f5es monof\u00e1sica e bif\u00e1sicas.  O MyGrid \u00e9 desenvolvido em linguagem de programa\u00e7\u00e3o python e mantido pelo Grupo de Redes El\u00e9tricas Inteligentes da Universidade Federal do Cear\u00e1 -  GREI-UFC .",
            "title": "Bem vindo \u00e0 documenta\u00e7\u00e3o do projeto MyGrid"
        },
        {
            "location": "/#comecando-do-comeco",
            "text": "Para come\u00e7ar a utilizar o MyGrid existem duas op\u00e7\u00f5es. A primeira \u00e9 utilizar o reposit\u00f3rio padr\u00e3o de pacotes python (PYPI), simplesmente digitando o comando:  $ pip install mygrid  Inicie uma se\u00e7\u00e3o Jupyter e digite:  In [1]: import mygrid  Pronto, o mygrid j\u00e1 est\u00e1 pronto para ser utilizado.  A segunda op\u00e7\u00e3o \u00e9 fazer o download do c\u00f3digo fonte no seu computador, para fazer isso \u00e9 muito simples, basta abrir o terminal e digitar o seguinte comando:  $ git clone https://github.com/grei-ufc/MyGrid  Ap\u00f3s executar esse comando uma pasta com o nome MyGrid ser\u00e1 criada no diret\u00f3rio em que voc\u00ea se encontra.  Digite:  $ cd MyGrid  Inicie uma se\u00e7\u00e3o Jupyter:  $ jupyter qtconsole  No console Jupyter digite:  In [1]: import mygrid  Para instalar o c\u00f3digo no seu ambiente Python padr\u00e3o ou no virtual enviroment que estiver utilizando, basta digitar no diret\u00f3rio raiz do mygrid:  $ python setup.py install  Se tudo tiver corrido bem nenhum erro ocorrer\u00e1 e voc\u00ea estar\u00e1 pronto para utilizar o MyGrid.",
            "title": "Come\u00e7ando do come\u00e7o"
        },
        {
            "location": "/#principios-gerais",
            "text": "O MyGrid \u00e9 a implementa\u00e7\u00e3o computacional do conceito de RNP, ou Representa\u00e7\u00e3o N\u00f3 Profundidade, para a representa\u00e7\u00e3o da rede el\u00e9trica de distribui\u00e7\u00e3o. Ou seja, no MyGrid os conceitos de n\u00f3, profundidade, \u00e1rvore de grafo, entre outros est\u00e3o mesclados aos conceitos de rede el\u00e9trica, chave, trecho de condutor, setor el\u00e9trico, e assim por diante. Isso foi realizado por meio de duas camadas de implementa\u00e7\u00e3o computacional.  Na primeira camada o MyGrid implementa dos conceitos relacionados \u00e0 RNP por meio da classe \u00c1rvore. Em uma segunda camada as classes implementadas representam os elementos da rede el\u00e9trica, como mencionados anteriormente, tendo alguns destes elementos as classes que representam a RNP como super-classes.  Os conceitos aqui mencionados ser\u00e3o mais bem compreendidos por meio da montagem e utiliza\u00e7\u00e3o dos m\u00e9todos computacionais disponibilizados pelas classes afim de realizar opera\u00e7\u00f5es na rede el\u00e9trica.  Al\u00e9m de disponibilizar uma representa\u00e7\u00e3o computacionalmente eficiente da rede el\u00e9trica o MyGrid disponibiliza algoritmos de an\u00e1lise tais como c\u00e1lculo de fluxo de carga e de curto-circuito.",
            "title": "Princ\u00edpios Gerais"
        },
        {
            "location": "/#representacao-de-grafos",
            "text": "Para que seja poss\u00edvel a representa\u00e7\u00e3o da rede el\u00e9trica por meio de grafos no modelo n\u00f3 profundidade primeiro \u00e9 necess\u00e1rio ter ferramentas que permitam a representa\u00e7\u00e3o gen\u00e9rica de grafos. Quem implementa essas fun\u00e7\u00f5es no MyGrid \u00e9 o m\u00f3dulo principal chamado de  rnp.py .  A principal classe desse m\u00f3dulo se chama  Tree()  e possui todos os m\u00e9todos e atributos necess\u00e1rios para a manipula\u00e7\u00e3o de uma \u00e1rvore de grafo.  No exemplo abaixo \u00e9 mostrado o instanciamento de duas \u00e1rvores de grafo,  tree_1  e  tree_2 . Para que a estrutura rnp possa ser montada duas a\u00e7\u00f5es precisam ser realizadas, a primeira \u00e9 a passagem da estrutura da rede, isso \u00e9 feito por meio de um dicion\u00e1rio em que cada chave \u00e9 o nome de um dos n\u00f3s da \u00e1rvore e os valores s\u00e3o listas contendo os vizinhos desse n\u00f3, sem considerar orienta\u00e7\u00e3o, ainda. A segunda a\u00e7\u00e3o \u00e9 indicar qual a o n\u00f3 ser\u00e1 considerado o n\u00f3 de refer\u00eancia da \u00e1rvore, ou seja, qual o n\u00f3 ser\u00e1 o n\u00f3 raiz, isso implica que este n\u00f3 ter\u00e1 profundidade zero.  nodes1 = {3: [1],\n          1: [3, 2, 7],\n          7: [1, 8, 9, 4, 10],\n          10: [7],\n          4: [7, 5, 6],\n          5: [4],\n          6: [4],\n          9: [7],\n          8: [7],\n          2: [1, 11, 12, 13],\n          11: [2],\n          12: [2, 13],\n          13: [12]}\n\nnodes2 = {14: [15],\n          15: [14, 16, 19],\n          16: [15, 17, 18],\n          17: [16],\n          18: [16],\n          19: [15]}\n\n# defini\u00e7\u00e3o da tree a1\ntree_1 = Tree(nodes1)\n\n# ordena\u00e7\u00e3o da tree a1\ntree_1.order(root=3)\nprint(tree_1.rnp)\n\n# defini\u00e7\u00e3o da tree a2\ntree_2 = Tree(nodes2)\n\n# ordena\u00e7\u00e3o da tree a2\ntree_2.order(root=14)\nprint(tree_2.rnp)  Ap\u00f3s a defini\u00e7\u00e3o das \u00e1rvores de grafo e instanciados os objetos \u00e9 poss\u00edvel relizar as opera\u00e7\u00f5es de poda e de inser\u00e7\u00e3o sobre as \u00e1rvores de grafos, e dessa forma modificar suas estruturas. No c\u00f3digo abaixo \u00e9 feita uma opera\u00e7\u00e3o de poda em  tree_1  na altura do n\u00f3 7 e em seguida o ramo podado \u00e9 inserido em  tree_2  na altura do n\u00f3 19.  # opera\u00e7\u00e3o de poda\nprune = tree_1.prune(7, change_rnp=True)\nprint(prune)\nprint(tree_1.rnp)\n\n# opera\u00e7\u00e3o de inser\u00e7\u00e3o\ntree_2.insert_branch(19, prune, 7)\nprint(tree_2.rnp)  Os resultados s\u00e3o mostrados abaixo:",
            "title": "Representa\u00e7\u00e3o de Grafos"
        },
        {
            "location": "/#instanciando-uma-rede-eletrica",
            "text": "O principal objetivo do MyGrid \u00e9 a representa\u00e7\u00e3o da rede el\u00e9trica em uma estrtura de grafos mas ao mesmo tempo com recursos de orienta\u00e7\u00e3o a objetos. Isso \u00e9 feito definindo classes que representam os elementos da rede el\u00e9trica mas que tamb\u00e9m herdam das classes definidas no m\u00f3dulo  rnp.py  para que seja poss\u00edvel uma representa\u00e7\u00e3o topol\u00f3gica da rede.  Para exemplificar o processo de representa\u00e7\u00e3o da rede el\u00e9trica iremos considerar a rede mostrada na Figura abaixo.   Nesta rede \u00e9 poss\u00edvel observar alguns componentes b\u00e1sicos de uma rede el\u00e9trica de m\u00e9dia/baixa tens\u00e3o:   Transformadores;  Chaves El\u00e9tricas;  Trechos de Linahs;  Pontos de deriva\u00e7\u00e3o e de carga;   Os primeiros elementos que podem ser instanciados para a composi\u00e7\u00e3o da rede el\u00e9trica s\u00e3o as chaves existentes no sistema, para a rede exemplo temos:  \nfrom mygrid.grid import Switch\n\n# switchs do alimentador 1 de S1\nch1 = Switch(name='1', state=1)\nch2 = Switch(name='2', state=1)\nch3 = Switch(name='3', state=1)\n\n# Switchs do alimentador 2 de S1\nch9 = Switch(name='9', state=1)\nch10 = Switch(name='10', state=1)\n\n# switchs de Fronteira\nch4 = Switch(name='4', state=0)\nch5 = Switch(name='5', state=0)\nch8 = Switch(name='8', state=0)\nch11 = Switch(name='11', state=0)\n\n# switchs do alimentador de S2\nch6 = Switch(name='6', state=1)\nch7 = Switch(name='7', state=1)  Em seguinda podemos instanciar os transformadores de distribui\u00e7\u00e3o, ou seja, os transformadores que baixam o n\u00edvel de tens\u00e3o de linha de 13,8kV para 380V. Para isso \u00e9 necess\u00e1rio tamb\u00e9m instanciar os n\u00edveis de tens\u00e3o prim\u00e1rio e secund\u00e1rio:  \nfrom mygrid.grid import TransformerModel\n# tensao nominal\n\nvll_mt = p2r(13.8e3, 0.0)\nvll_bt = p2r(380.0, 0.0)\n\n# transformers\nt1 = TransformerModel(name=\"T1\",\n                      primary_voltage=vll_mt,\n                      secondary_voltage=vll_bt,\n                      power=225e3,\n                      impedance=0.01 + 0.2j)  Ap\u00f3s instanciar chaves e transformadores de distribui\u00e7\u00e3o o pr\u00f3ximo passo \u00e9 instanciar os n\u00f3s de carga presentes no sistema, tanto os de m\u00e9dia quanto os de baixa tens\u00e3o, isso \u00e9 feito especificando um  nome , um  n\u00edvel de tens\u00e3o , e um  valor de carga .  Tamb\u00e9m se o n\u00f3 de carga possuir interface com uma rede el\u00e9trica externa isso deve ser informador no par\u00e2metro  external_grid .  # Nos de carga do alimentador S1_AL1\ns1 = LoadNode(name='S1',\n              voltage=vll_mt,\n              external_grid=eg1)\na1 = LoadNode(name='A1',\n              power=120 + 160j,\n              voltage=vll_mt)\na2 = LoadNode(name='A2',\n              power=150.0e3 + 110.0e3j,\n              voltage=vll_mt)\n\na3 = LoadNode(name='A3',\n              power=100.0e3 + 80.0e3j,\n              voltage=vll_mt)\nb1 = LoadNode(name='B1',\n              power=200.0e3 + 140.0e3j,\n              # generation=b1_PQ,\n              voltage=vll_mt)\nb2 = LoadNode(name='B2',\n              power=150.0e3 + 110.0e3j,\n              # generation=b2_PV,\n              voltage=vll_mt)\n\nb3 = LoadNode(name='B3',\n              power=100.0e3 + 80.0e3j,\n              voltage=vll_mt)\nc1 = LoadNode(name='C1',\n              power=200.0e3 + 140.0e3j,\n              # shunt_capacitor=SC_C1,\n              voltage=vll_mt)\nc2 = LoadNode(name='C2',\n              power=150.0e3 + 110.0e3j,\n              # generation=c2_PV,\n              voltage=vll_mt)\nc3 = LoadNode(name='C3',\n              ppa=400.0e3 + 0.0j,\n              ppb=0.0e3 + 0.0j,\n              ppc=0.0e3 + 0.0j,\n              # generation=c3_PV,\n              voltage=vll_mt)\n\n# Nos de carga do alimentador S1_AL1\nf1 = LoadNode(name='F1',\n              power=100.0e3 + 80.0e3j,\n              voltage=vll_mt)\ng1 = LoadNode(name='G1',\n              power=100.0e3 + 80.0e3j,\n              voltage=vll_mt)\n\n# Nos de carga do alimentador S2_AL1\ns2 = LoadNode(name='S2',\n              voltage=vll_mt,\n              external_grid=eg1)\nd1 = LoadNode(name='D1',\n              power=200.0e3 + 160.0e3j,\n              voltage=vll_mt)\nd2 = LoadNode(name='D2',\n              power=900.0e3 + 40.0e3j,\n              voltage=vll_mt)\nd3 = LoadNode(name='D3',\n              power=100.0e3 + 80.0e3j,\n              voltage=vll_mt,)\ne1 = LoadNode(name='E1',\n              power=100.0e3 + 40.0e3j,\n              voltage=vll_mt)\ne2 = LoadNode(name='E2',\n              power=110.0e3 + 70.0e3j,\n              voltage=vll_mt)\ne3 = LoadNode(name='E3',\n              power=150.0e3 + 80.0e3j,\n              voltage=vll_mt)\n\n# Subgrid load-nodes connecteds to A1\naa1 = LoadNode(name='AA1',\n               power=0.0 + 0.0j,\n               voltage=vll_bt)\naa2 = LoadNode(name='AA2',\n               power=20.0e3 + 5.0e3j,\n               voltage=vll_bt)\naa3 = LoadNode(name='AA3',\n               power=20.0e3 + 5.0e3j,\n               voltage=vll_bt)  Ap\u00f3s serem definidos os n\u00f3s de carga da rede el\u00e9trica, \u00e9 preciso especificar os seguimentos de linha ou transformadores que est\u00e3o entre dois n\u00f3s, definindo assim a topologia da rede. O primeiro procedimento para isso \u00e9 a defini\u00e7\u00e3o dos condutores que ser\u00e3o utilizados nos seguimentos de linha. Para isso o MyGrid possui uma tabela de condutores pr\u00e9-definidos conforme especificado nos ap\u00eandices do livro  Distribution System Modeling and Analysis de William H. Kersting . A lista dos condutores com seus respectivos c\u00f3digos pode ser visualizada abaixo:  [\n    {\n        \"id\": 0,\n        \"size\": \"1\",\n        \"stranding\": \"None\",\n        \"material\": \"ACSR\",\n    },\n    {\n        \"id\": 1,\n        \"size\": \"1\",\n        \"stranding\": \"7 STRD\",\n        \"material\": \"Copper\",\n    },\n    {\n        \"id\": 2,\n        \"size\": \"1\",\n        \"stranding\": \"CLASS A\",\n        \"material\": \"AA\",\n    },\n    {\n        \"id\": 3,\n        \"size\": \"2\",\n        \"stranding\": \"6/1\",\n        \"material\": \"ACSR\",\n    },\n    {\n        \"id\": 4,\n        \"size\": \"2\",\n        \"stranding\": \"7 STRD\",\n        \"material\": \"Copper\",\n    },\n    {\n        \"id\": 5,\n        \"size\": \"2\",\n        \"stranding\": \"7/1\",\n        \"material\": \"ACSR\",\n    },\n    {\n        \"id\": 6,\n        \"size\": \"2\",\n        \"stranding\": \"AWG SLD\",\n        \"material\": \"Copper\",\n    },\n    {\n        \"id\": 7,\n        \"size\": \"2\",\n        \"stranding\": \"CLASS A\",\n        \"material\": \"AA\",\n    },\n    {\n        \"id\": 8,\n        \"size\": \"3\",\n        \"stranding\": \"6/1\",\n        \"material\": \"ACSR\",\n    },\n    {\n        \"id\": 9,\n        \"size\": \"3\",\n        \"stranding\": \"AWG SLD\",\n        \"material\": \"Copper\",\n    },\n    {\n        \"id\": 10,\n        \"size\": \"4\",\n        \"stranding\": \"6/1\",\n        \"material\": \"ACSR\",\n    },\n    {\n        \"id\": 11,\n        \"size\": \"4\",\n        \"stranding\": \"7/1\",\n        \"material\": \"ACSR\",\n    },\n    {\n        \"id\": 12,\n        \"size\": \"4\",\n        \"stranding\": \"AWG SLD\",\n        \"material\": \"Copper\",\n    },\n    {\n        \"id\": 13,\n        \"size\": \"4\",\n        \"stranding\": \"CLASS A\",\n        \"material\": \"AA\",\n    },\n    {\n        \"id\": 14,\n        \"size\": \"5\",\n        \"stranding\": \"6/1\",\n        \"material\": \"ACSR\",\n    },\n    {\n        \"id\": 15,\n        \"size\": \"5\",\n        \"stranding\": \"AWG SLD\",\n        \"material\": \"Copper\",\n    },\n    {\n        \"id\": 16,\n        \"size\": \"6\",\n        \"stranding\": \"6/1\",\n        \"material\": \"ACSR\",\n    },\n    {\n        \"id\": 17,\n        \"size\": \"6\",\n        \"stranding\": \"AWG SLD\",\n        \"material\": \"Copper\",\n    },\n    {\n        \"id\": 18,\n        \"size\": \"6\",\n        \"stranding\": \"CLASS A\",\n        \"material\": \"AA\",\n    },\n    {\n        \"id\": 19,\n        \"size\": \"7\",\n        \"stranding\": \"AWG SLD\",\n        \"material\": \"Copper\",\n    },\n    {\n        \"id\": 20,\n        \"size\": \"8\",\n        \"stranding\": \"AWG SLD\",\n        \"material\": \"Copper\",\n    },\n    {\n        \"id\": 21,\n        \"size\": \"9\",\n        \"stranding\": \"AWG SLD\",\n        \"material\": \"Copper\",\n    },\n    {\n        \"id\": 22,\n        \"size\": \"10\",\n        \"stranding\": \"AWG SLD\",\n        \"material\": \"Copper\",\n    },\n    {\n        \"id\": 23,\n        \"size\": \"12\",\n        \"stranding\": \"AWG SLD\",\n        \"material\": \"Copper\",\n    },\n    {\n        \"id\": 24,\n        \"size\": \"14\",\n        \"stranding\": \"AWG SLD\",\n        \"material\": \"Copper\",\n    },\n    {\n        \"id\": 25,\n        \"size\": \"16\",\n        \"stranding\": \"AWG SLD\",\n        \"material\": \"Copper\",\n    },\n    {\n        \"id\": 26,\n        \"size\": \"18\",\n        \"stranding\": \"AWG SLD\",\n        \"material\": \"Copper\",\n    },\n    {\n        \"id\": 27,\n        \"size\": \"19\",\n        \"stranding\": \"AWG SLD\",\n        \"material\": \"Copper\",\n    },\n    {\n        \"id\": 28,\n        \"size\": \"20\",\n        \"stranding\": \"AWG SLD\",\n        \"material\": \"Copper\",\n    },\n    {\n        \"id\": 29,\n        \"size\": \"22\",\n        \"stranding\": \"AWG SLD\",\n        \"material\": \"Copper\",\n    },\n    {\n        \"id\": 30,\n        \"size\": \"24\",\n        \"stranding\": \"AWG SLD\",\n        \"material\": \"Copper\",\n    },\n    {\n        \"id\": 31,\n        \"size\": \"1/0\",\n        \"stranding\": \"None\",\n        \"material\": \"ACSR\",\n    },\n    {\n        \"id\": 32,\n        \"size\": \"1/0\",\n        \"stranding\": \"7 STRD\",\n        \"material\": \"Copper\",\n    },\n    {\n        \"id\": 33,\n        \"size\": \"1/0\",\n        \"stranding\": \"CLASS A\",\n        \"material\": \"AA\",\n    },\n    {\n        \"id\": 34,\n        \"size\": \"2/0\",\n        \"stranding\": \"None\",\n        \"material\": \"ACSR\",\n    },\n    {\n        \"id\": 35,\n        \"size\": \"2/0\",\n        \"stranding\": \"7 STRD\",\n        \"material\": \"Copper\",\n    },\n    {\n        \"id\": 36,\n        \"size\": \"2/0\",\n        \"stranding\": \"CLASS A\",\n        \"material\": \"AA\",\n    },\n    {\n        \"id\": 37,\n        \"size\": \"3/0\",\n        \"stranding\": \"12 STRD\",\n        \"material\": \"Copper\",\n    },\n    {\n        \"id\": 38,\n        \"size\": \"3/0\",\n        \"stranding\": \"6/1\",\n        \"material\": \"ACSR\",\n    },\n    {\n        \"id\": 39,\n        \"size\": \"3/0\",\n        \"stranding\": \"7 STRD\",\n        \"material\": \"Copper\",\n    },\n    {\n        \"id\": 40,\n        \"size\": \"3/0\",\n        \"stranding\": \"CLASS A\",\n        \"material\": \"AA\",\n    },\n    {\n        \"id\": 41,\n        \"size\": \"3/8\",\n        \"stranding\": \"INCH STE\",\n        \"material\": \"Steel\",\n    },\n    {\n        \"id\": 42,\n        \"size\": \"4/0\",\n        \"stranding\": \"12 STRD\",\n        \"material\": \"Copper\",\n    },\n    {\n        \"id\": 43,\n        \"size\": \"4/0\",\n        \"stranding\": \"19 STRD\",\n        \"material\": \"Copper\",\n    },\n    {\n        \"id\": 44,\n        \"size\": \"4/0\",\n        \"stranding\": \"6/1\",\n        \"material\": \"ACSR\",\n    },\n    {\n        \"id\": 45,\n        \"size\": \"4/0\",\n        \"stranding\": \"7 STRD\",\n        \"material\": \"Copper\",\n    },\n    {\n        \"id\": 46,\n        \"size\": \"4/0\",\n        \"stranding\": \"CLASS A\",\n        \"material\": \"AA\",\n    },\n    {\n        \"id\": 47,\n        \"size\": \"250000\",\n        \"stranding\": \"12 STRD\",\n        \"material\": \"Copper\",\n    },\n    {\n        \"id\": 48,\n        \"size\": \"250000\",\n        \"stranding\": \"19 STRD\",\n        \"material\": \"Copper\",\n    },\n    {\n        \"id\": 49,\n        \"size\": \"250000\",\n        \"stranding\": \"CON LAY\",\n        \"material\": \"AA\",\n    },\n    {\n        \"id\": 50,\n        \"size\": \"266800\",\n        \"stranding\": \"26/7\",\n        \"material\": \"ACSR\",\n    },\n    {\n        \"id\": 51,\n        \"size\": \"266800\",\n        \"stranding\": \"CLASS A\",\n        \"material\": \"AA\",\n    },\n    {\n        \"id\": 52,\n        \"size\": \"300000\",\n        \"stranding\": \"12 STRD\",\n        \"material\": \"Copper\",\n    },\n    {\n        \"id\": 53,\n        \"size\": \"300000\",\n        \"stranding\": \"19 STRD\",\n        \"material\": \"Copper\",\n    },\n    {\n        \"id\": 54,\n        \"size\": \"300000\",\n        \"stranding\": \"26/7\",\n        \"material\": \"ACSR\",\n    },\n    {\n        \"id\": 55,\n        \"size\": \"300000\",\n        \"stranding\": \"30/7\",\n        \"material\": \"ACSR\",\n    },\n    {\n        \"id\": 56,\n        \"size\": \"300000\",\n        \"stranding\": \"CON LAY\",\n        \"material\": \"AA\",\n    },\n    {\n        \"id\": 57,\n        \"size\": \"336400\",\n        \"stranding\": \"26/7\",\n        \"material\": \"ACSR\",\n    },\n    {\n        \"id\": 58,\n        \"size\": \"336400\",\n        \"stranding\": \"30/7\",\n        \"material\": \"ACSR\",\n    },\n    {\n        \"id\": 59,\n        \"size\": \"336400\",\n        \"stranding\": \"CLASS A\",\n        \"material\": \"AA\",\n    },\n    {\n        \"id\": 60,\n        \"size\": \"350000\",\n        \"stranding\": \"12 STRD\",\n        \"material\": \"Copper\",\n    },\n    {\n        \"id\": 61,\n        \"size\": \"350000\",\n        \"stranding\": \"19 STRD\",\n        \"material\": \"Copper\",\n    },\n    {\n        \"id\": 62,\n        \"size\": \"350000\",\n        \"stranding\": \"CON LAY\",\n        \"material\": \"AA\",\n    },\n    {\n        \"id\": 63,\n        \"size\": \"397500\",\n        \"stranding\": \"26/7\",\n        \"material\": \"ACSR\",\n    },\n    {\n        \"id\": 64,\n        \"size\": \"397500\",\n        \"stranding\": \"30/7\",\n        \"material\": \"ACSR\",\n    },\n    {\n        \"id\": 65,\n        \"size\": \"397500\",\n        \"stranding\": \"CLASS A\",\n        \"material\": \"AA\",\n    },\n    {\n        \"id\": 66,\n        \"size\": \"400000\",\n        \"stranding\": \"19 STRD\",\n        \"material\": \"Copper\",\n    },\n    {\n        \"id\": 67,\n        \"size\": \"450000\",\n        \"stranding\": \"19 STRD\",\n        \"material\": \"Copper\",\n    },\n    {\n        \"id\": 68,\n        \"size\": \"450000\",\n        \"stranding\": \"CON LAG\",\n        \"material\": \"AA\",\n    },\n    {\n        \"id\": 69,\n        \"size\": \"477000\",\n        \"stranding\": \"26/7\",\n        \"material\": \"ACSR\",\n    },\n    {\n        \"id\": 70,\n        \"size\": \"477000\",\n        \"stranding\": \"30/7\",\n        \"material\": \"ACSR\",\n    },\n    {\n        \"id\": 71,\n        \"size\": \"477000\",\n        \"stranding\": \"CLASS A\",\n        \"material\": \"AA\",\n    },\n    {\n        \"id\": 72,\n        \"size\": \"500000\",\n        \"stranding\": \"19 STRD\",\n        \"material\": \"Copper\",\n    },\n    {\n        \"id\": 73,\n        \"size\": \"500000\",\n        \"stranding\": \"37 STRD\",\n        \"material\": \"Copper\",\n    },\n    {\n        \"id\": 74,\n        \"size\": \"500000\",\n        \"stranding\": \"CON LAY\",\n        \"material\": \"AA\",\n    },\n    {\n        \"id\": 75,\n        \"size\": \"556500\",\n        \"stranding\": \"26/7\",\n        \"material\": \"ACSR\",\n    },\n    {\n        \"id\": 76,\n        \"size\": \"556500\",\n        \"stranding\": \"30/7\",\n        \"material\": \"ACSR\",\n    },\n    {\n        \"id\": 77,\n        \"size\": \"556500\",\n        \"stranding\": \"CLASS A\",\n        \"material\": \"AA\",\n    },\n    {\n        \"id\": 78,\n        \"size\": \"600000\",\n        \"stranding\": \"37 STRD\",\n        \"material\": \"Copper\",\n    },\n    {\n        \"id\": 79,\n        \"size\": \"600000\",\n        \"stranding\": \"CON LAY\",\n        \"material\": \"AA\",\n    },\n    {\n        \"id\": 80,\n        \"size\": \"605000\",\n        \"stranding\": \"26/7\",\n        \"material\": \"ACSR\",\n    },\n    {\n        \"id\": 81,\n        \"size\": \"605000\",\n        \"stranding\": \"54/7\",\n        \"material\": \"ACSR\",\n    },\n    {\n        \"id\": 82,\n        \"size\": \"636000\",\n        \"stranding\": \"27/7\",\n        \"material\": \"ACSR\",\n    },\n    {\n        \"id\": 83,\n        \"size\": \"636000\",\n        \"stranding\": \"30/19\",\n        \"material\": \"ACSR\",\n    },\n    {\n        \"id\": 84,\n        \"size\": \"636000\",\n        \"stranding\": \"54/7\",\n        \"material\": \"ACSR\",\n    },\n    {\n        \"id\": 85,\n        \"size\": \"636000\",\n        \"stranding\": \"CLASS A\",\n        \"material\": \"AA\",\n    },\n    {\n        \"id\": 86,\n        \"size\": \"666600\",\n        \"stranding\": \"54/7\",\n        \"material\": \"ACSR\",\n    },\n    {\n        \"id\": 87,\n        \"size\": \"700000\",\n        \"stranding\": \"37 STRD\",\n        \"material\": \"Copper\",\n    },\n    {\n        \"id\": 88,\n        \"size\": \"700000\",\n        \"stranding\": \"CON LAY\",\n        \"material\": \"AA\",\n    },\n    {\n        \"id\": 89,\n        \"size\": \"715500\",\n        \"stranding\": \"26/7\",\n        \"material\": \"ACSR\",\n    },\n    {\n        \"id\": 90,\n        \"size\": \"715500\",\n        \"stranding\": \"30/19\",\n        \"material\": \"ACSR\",\n    },\n    {\n        \"id\": 91,\n        \"size\": \"715500\",\n        \"stranding\": \"54/7\",\n        \"material\": \"ACSR\",\n    },\n    {\n        \"id\": 92,\n        \"size\": \"715500\",\n        \"stranding\": \"CLASS A\",\n        \"material\": \"AA\",\n    },\n    {\n        \"id\": 93,\n        \"size\": \"750000\",\n        \"stranding\": \"37 STRD\",\n        \"material\": \"AA\",\n    },\n    {\n        \"id\": 94,\n        \"size\": \"750000\",\n        \"stranding\": \"CON LAY\",\n        \"material\": \"AA\",\n    },\n    {\n        \"id\": 95,\n        \"size\": \"795000\",\n        \"stranding\": \"26/7\",\n        \"material\": \"ACSR\",\n    },\n    {\n        \"id\": 96,\n        \"size\": \"795000\",\n        \"stranding\": \"30/19\",\n        \"material\": \"ACSR\",\n    },\n    {\n        \"id\": 97,\n        \"size\": \"795000\",\n        \"stranding\": \"54/7\",\n        \"material\": \"ACSR\",\n    }\n]  Tamb\u00e9m \u00e9 necess\u00e1rio definir um modelo de linha especificando os condutores da linha e sua configura\u00e7\u00e3o geom\u00e9trica na estrutura utilizada. Para este exemplo s\u00e3o utilizados dois tipos de modelos de linha, um para a rede de m\u00e9dia tens\u00e3o e outro para a rede de baixa tens\u00e3o. Tamb\u00e9m s\u00e3o especificados os condutores ids dos condutires de fase e de neutro para a m\u00e9dia e a baixa tens\u00e3o:  phase_conduct = Conductor(id=57)\nneutral_conduct = Conductor(id=44)\n\nline_model_a = LineModel(loc_a=0.0 + 29.0j,\n                         loc_b=2.5 + 29.0j,\n                         loc_c=7.0 + 29.0j,\n                         loc_n=4.0 + 25.0j,\n                         conductor=phase_conduct,\n                         neutral_conductor=neutral_conduct,\n                         neutral=False)\n\nphase_conduct_bt = Conductor(id=32)\n\nline_model_b = LineModel(loc_a=0.0 + 29.0j,\n                         loc_b=2.5 + 29.0j,\n                         loc_c=7.0 + 29.0j,\n                         loc_n=4.0 + 25.0j,\n                         conductor=phase_conduct_bt,\n                         neutral_conductor=neutral_conduct,\n                         neutral=True)  Especificados os modelos de linha \u00e9 poss\u00edvel pass\u00e1-los como par\u00e2metro da classe que ir\u00e1 especificar a liga\u00e7\u00e3o entre os n\u00f3s, no MyGrid essa classe tem o nome de  Section()  e recebe como par\u00e2metros um nome, os n\u00f3s que est\u00e3o em seus extremos, caso haja chave no seguimento esta \u00e9 informada, o modelo de linha ou de transformador, e caso seja linha, o comprimento do seguimento de linha:  # Trechos do alimentador S1_AL1\ns1_a2 = Section(name='S1A2',\n                n1=s1,\n                n2=a2,\n                switch=ch1,\n                line_model=line_model_a,\n                length=4)\n\na2_a1 = Section(name='A2A1',\n                n1=a2,\n                n2=a1,\n                line_model=line_model_a,\n                length=4)\na2_a3 = Section(name='A2A3',\n                n1=a2,\n                n2=a3,\n                line_model=line_model_a,\n                length=4)\na2_c1 = Section(name='A2C1',\n                n1=a2,\n                n2=c1,\n                switch=ch3,\n                line_model=line_model_a,\n                length=4)\n\nc1_c2 = Section(name='C1C2',\n                n1=c1,\n                n2=c2,\n                line_model=line_model_a,\n                length=4)\nc1_c3 = Section(name='C1C3',\n                n1=c1,\n                n2=c3,\n                line_model=line_model_a,\n                length=4)\n\na3_b1 = Section(name='A3B1',\n                n1=a3,\n                n2=b1,\n                switch=ch2,\n                line_model=line_model_a,\n                length=4)\n\nb1_b2 = Section(name='B1B2',\n                n1=b1,\n                n2=b2,\n                line_model=line_model_a,\n                length=4)\nb2_b3 = Section(name='B2B3',\n                n1=b2,\n                n2=b3,\n                line_model=line_model_a,\n                length=4)\n\n# Trechos do alimentador S1_AL2\ns1_f1 = Section(name='S1F1',\n                n1=s1,\n                n2=f1,\n                switch=ch9,\n                line_model=line_model_a,\n                length=1.0)\nf1_g1 = Section(name='F1G1',\n                n1=f1,\n                n2=g1,\n                switch=ch10,\n                line_model=line_model_a,\n                length=1.0)\ng1_d2 = Section(name='G1D2',\n                n1=g1,\n                n2=d2,\n                switch=ch11,\n                line_model=line_model_a,\n                length=1.0)\n\n# Trechos do alimentador S2_AL1\ns2_d1 = Section(name='S2D1',\n                n1=s2,\n                n2=d1,\n                switch=ch6,\n                line_model=line_model_a,\n                length=1.0)\n\nd1_d2 = Section(name='D1D2',\n                n1=d1,\n                n2=d2,\n                line_model=line_model_a,\n                length=1.0)\nd1_d3 = Section(name='D1D3',\n                n1=d1,\n                n2=d3,\n                line_model=line_model_a,\n                length=1.0)\nd1_e1 = Section(name='D1E1',\n                n1=d1,\n                n2=e1,\n                switch=ch7,\n                line_model=line_model_a,\n                length=1.0)\ne1_e2 = Section(name='E1E2',\n                n1=e1,\n                n2=e2,\n                line_model=line_model_a,\n                length=1.0)\ne1_e3 = Section(name='E1E3',\n                n1=e1,\n                n2=e3,\n                line_model=line_model_a,\n                length=1.0)\n\n# Sections de encontro de alimentador\nc3_e3 = Section(name='C3E3',\n                n1=c3,\n                n2=e3,\n                switch=ch8,\n                line_model=line_model_a,\n                length=1.0)\nb2_e2 = Section(name='B2E2',\n                n1=b2,\n                n2=e2,\n                switch=ch4,\n                line_model=line_model_a,\n                length=1.0)\n\nb3_c3 = Section(name='B3C3',\n                n1=b3,\n                n2=c3,\n                switch=ch5,\n                line_model=line_model_a,\n                length=0.5)\n\n\n# subgrid sections connecteds to A1\na1_aa1 = Section(name='A1AA1',\n                 n1=a1,\n                 n2=aa1,\n                 transformer=t1,\n                 length=3.0e-2)\naa1_aa2 = Section(name='AA1AA2',\n                  n1=aa1,\n                  n2=aa2,\n                  line_model=line_model_b,\n                  length=3.0e-2)\naa1_aa3 = Section(name='AA2AA3',\n                  n1=aa1,\n                  n2=aa3,\n                  line_model=line_model_b,\n                  length=3.0e-2)",
            "title": "Instanciando uma rede el\u00e9trica"
        },
        {
            "location": "/about/",
            "text": "Sobre o projeto MyGrid\n\n\nO projeto MyGrid tem o objetivo de oferecer uma ferramenta computacional para representa\u00e7\u00e3o e realiza\u00e7\u00e3o de estudos da rede el\u00e9trica de distribui\u00e7\u00e3o. O MyGrid \u00e9 desenvolvido em linguagem de programa\u00e7\u00e3o python e mantido pelo Grupo de redes el\u00e9tricas inteligentes da Universidade Federal do Cear\u00e1.",
            "title": "Sobre"
        },
        {
            "location": "/about/#sobre-o-projeto-mygrid",
            "text": "O projeto MyGrid tem o objetivo de oferecer uma ferramenta computacional para representa\u00e7\u00e3o e realiza\u00e7\u00e3o de estudos da rede el\u00e9trica de distribui\u00e7\u00e3o. O MyGrid \u00e9 desenvolvido em linguagem de programa\u00e7\u00e3o python e mantido pelo Grupo de redes el\u00e9tricas inteligentes da Universidade Federal do Cear\u00e1.",
            "title": "Sobre o projeto MyGrid"
        }
    ]
}